// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)

 Multiplexor:
 * if (sel = 0) out = a, else out = b(sel=1)

 bit/register
 if (load(t)) out(t+1) = in(t), else out(t+1) = out(t)
 */

CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    //else if inc(t):   out(t+1) = out(t) + 1
    //set firstout(the former input)
    Inc16(in=firstout, out=to1);
    Mux16(a=firstout, b=to1, sel=inc, out=to2);
    //else if load(t):  out(t+1) = in(t) (else out(t+1)=out(t))
    Mux16(a=to2, b=in, sel=load, out=to3);
    //if reset(t): out(t+1) = 0
    Mux16(a=to3, b=false, sel=reset, out=int);

    //else  out(t+1) = out(t)
    //if all load=0
    Or(a=inc, b=load, out=tl);
    Or(a=tl, b=reset, out=l);
    //set the present out(t)=firstout to help the next loop operate
    Register(in=int, load=l, out=firstout, out=out);
}